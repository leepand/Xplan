{"version":3,"sources":["webpack:///./src/views/project/ProjectDynamic.vue?effb","webpack:///src/views/project/ProjectDynamic.vue","webpack:///./src/views/project/ProjectDynamic.vue?1afd","webpack:///./src/views/project/ProjectDynamic.vue","webpack:///./src/views/project/ProjectDynamic.vue?16e0","webpack:///./src/api/api.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","directives","name","rawName","value","expression","staticStyle","tableData","formatTime","total","on","handleCurrentChange","staticRenderFns","component","axios","defaults","withCredentials","base","test","requestLogin","params","post","then","res","data","getProject","headers","get","getProjectDynamicList","getProjectDetail","addProject","delProject","updateProject","disableProject","enableProject","getProjectMemberList","getAllUserList","addCase","updateCase","getTestTenTime","absetWinner","getTestResultList"],"mappings":"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","file":"js/chunk-853d2552.e97765c8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',{staticClass:\"dynamic-manage\"},[_c('el-col',{attrs:{\"span\":24}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"time\",\"formatter\":_vm.formatTime,\"label\":\"操作时间\",\"min-width\":\"13%\"}}),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"类型\",\"min-width\":\"10%\"}}),_c('el-table-column',{attrs:{\"prop\":\"operationObject\",\"label\":\"操作对象\",\"min-width\":\"15%\"}}),_c('el-table-column',{attrs:{\"prop\":\"user_name\",\"label\":\"操作人\",\"min-width\":\"15%\"}}),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"47%\"}})],1),_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <el-row class=\"dynamic-manage\">\n        <el-col :span=\"24\">\n            <el-table :data=\"tableData\" stripe style=\"width: 100%\" v-loading=\"listLoading\">\n                <el-table-column prop=\"time\":formatter=\"formatTime\" label=\"操作时间\" min-width=\"13%\">\n                </el-table-column>\n                <el-table-column prop=\"type\" label=\"类型\" min-width=\"10%\">\n                </el-table-column>\n                <el-table-column prop=\"operationObject\" label=\"操作对象\" min-width=\"15%\">\n                </el-table-column>\n                <el-table-column prop=\"user_name\" label=\"操作人\" min-width=\"15%\">\n                </el-table-column>\n                <el-table-column prop=\"description\" label=\"描述\" min-width=\"47%\">\n                </el-table-column>\n            </el-table>\n            <!--工具条-->\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\n    import { getProjectDynamicList } from '../../api/api'\n    import moment from \"moment\"\n    export default {\n        data() {\n            return {\n                moment:moment,\n                tableData: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n            }\n        },\n        methods: {\n            // row[column.property] 能读取到该行该列的数据。代码中实现了时间格式的转换\n            formatTime2(row, column) {\n                const date = new Date(row[column.property])\n                return date.getFullYear() + '年' +\n                    date.getMonth() + '月' +\n                    date.getDate() + '日 ' +\n                    date.getHours() + ':' +\n                    date.getMinutes()\n            },\n            formatTime:function(row, column) { //日期格式化\n                var date = row[column.property];  \n                if (date == undefined) {  \n                    return \"\";  \n                }  \n                return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");  \n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectDynamic()\n            },\n            // 获取项目动态\n            getProjectDynamic() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    project_id: Number(this.$route.params.project_id),\n                    page: self.page\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                getProjectDynamicList(headers, params).then(_data => {\n                    let {msg, code, data} = _data;\n                    self.listLoading = false;\n                    setTimeout(() => {\n                        self.listLoading = false;\n                    }, 20);\n                    console.log(data)\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.tableData = data.data\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                }).catch(e => this.listLoading = false)\n            },\n        },\n        mounted() {\n            this.getProjectDynamic();\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .dynamic-manage {\n        margin: 35px;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProjectDynamic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProjectDynamic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProjectDynamic.vue?vue&type=template&id=7afc246c&scoped=true&\"\nimport script from \"./ProjectDynamic.vue?vue&type=script&lang=js&\"\nexport * from \"./ProjectDynamic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ProjectDynamic.vue?vue&type=style&index=0&id=7afc246c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7afc246c\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProjectDynamic.vue?vue&type=style&index=0&id=7afc246c&lang=scss&scoped=true&\"","import axios from 'axios'\n\naxios.defaults.withCredentials = false // 配置为true\n//let base = 'http://127.0.0.1:6003'\n//export const test = 'http://127.0.0.1:6003'\nlet base = '/xplanapi'\nexport const test = 'xplanapi'\n//export const delpoySocketIP = `http://0.0.0.0:5001`\n\n/* export const requestLogin = params => {\n    return axios({\n        method: 'POST',\n        url: `${base}/login/userLogin`,\n        auth: params\n    })\n    .then(res => res.data);\n}; */\n\nexport const requestLogin = params => {\n  return axios.post(`${base}/login/userLogin`, params).then(res => res.data)\n}\n\nexport const setpwd = params => {\n  return axios.post(`${base}/setpwd`, params)\n}\n\nexport const getUserListPage = params => {\n  return axios.get(`${base}/users/listpage`, { params: params })\n}\n\nexport const removeUser = params => {\n  return axios.get(`${base}/user/remove`, { params: params })\n}\n\nexport const batchRemoveUser = params => {\n  return axios.get(`${base}/user/bathremove`, { params: params })\n}\n\n// 获取项目\nexport const getProject = (headers, params) => {\n  return axios.get(`${base}/api/project/project_list`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取项目动态\nexport const getProjectDynamicList = (headers, params) => {\n  return axios.get(`${base}/api/dynamic/dynamic`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取项目详情\nexport const getProjectDetail = (headers, params) => {\n  return axios.get(`${base}/api/title/project_info`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 添加项目\nexport const addProject = (headers, params) => {\n  return axios.post(`${base}/api/project/add_project`, params, { headers }).then(res => res.data)\n}\n\n// 删除项目\nexport const delProject = (headers, params) => {\n  return axios.post(`${base}/api/project/del_project`, params, { headers }).then(res => res.data)\n}\n\n// 修改项目\nexport const updateProject = (headers, params) => {\n  return axios.post(`${base}/api/project/update_project`, params, { headers }).then(res => res.data)\n}\n\n// 禁用项目\nexport const disableProject = (headers, params) => {\n  return axios.post(`${base}/api/project/disable_project`, params, { headers }).then(res => res.data)\n}\n// 启用项目\nexport const enableProject = (headers, params) => {\n  return axios.post(`${base}/api/project/enable_project`, params, { headers }).then(res => res.data)\n}\n\n// 获取特征元数据列表\nexport const getFeature = (headers, params) => {\n  return axios.get(`${base}/api/feature/feature_list`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 添加特征\nexport const addFeature = (headers, params) => {\n  return axios.post(`${base}/api/feature/add_feature`, params, { headers }).then(res => res.data)\n}\n\n// 修改特征\nexport const updateFeature = (headers, params) => {\n  return axios.post(`${base}/api/feature/update_feature`, params, { headers }).then(res => res.data)\n}\n// 删除特征\nexport const delFeature = (headers, params) => {\n  return axios.post(`${base}/api/feature/del_feature`, params, { headers }).then(res => res.data)\n}\n\n// 获取项目成员\nexport const getProjectMemberList = (headers, params) => {\n  return axios.get(`${base}/api/member/project_member`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取所有用户\nexport const getAllUserList = (headers, params) => {\n  return axios.get(`${base}/api/member/alluserlist`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取注册的模型服务列表\nexport const getModelService = (headers, params) => {\n  return axios.get(`${base}/api/serving/service_total`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取接口分组列表\nexport const getApiGroupList = (headers, params) => {\n  return axios.get(`${base}/api/api/group`, { params: params, headers: headers }).then(res => res.data)\n}\n// 添加接口分组\nexport const addApiGroup = (headers, params) => { return axios.post(`${base}/api/api/add_group`, params, { headers }).then(res => res.data) }\n// 修改接口分组\nexport const updateApiGroup = (headers, params) => {\n  return axios.post(`${base}/api/api/update_name_group`, params, { headers }).then(res => res.data)\n}\n// 删除接口分组\nexport const delApiGroup = (headers, params) => {\n  return axios.post(`${base}/api/api/del_group`, params, { headers }).then(res => res.data)\n}\n\n// 添加接口\nexport const addApiDetail = (headers, params) => {\n  return axios.post(`${base}/api/serving/add_service`, params, { headers }).then(res => res.data)\n}\n\n// 获取模型存储信息 API在workspace\nexport const getModelReposAPI = (headers, params) => {\n  return axios.get(`${base}/api/serving/model_repos`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 模型部署操作\nexport const hostModel = (headers, params) => {\n  return axios.post(`${base}/api/api/host_model`, params, { headers }).then(res => res.data)\n}\n\n// 新增实验\nexport const addCase = (headers, params) => {\n  return axios.post(`${base}/api/automation/add_case`, params, { headers }).then(res => res.data)\n}\n// 修改实验\nexport const updateCase = (headers, params) => {\n  return axios.post(`${base}/api/automation/update_case`, params, { headers }).then(res => res.data)\n}\n\nexport const getTestTenTime = (headers, params) => {\n  return axios.post(`${base}/api/automation/update_case22`, params, { headers }).then(res => res.data)\n}\n\n// 修改实验\nexport const absetWinner = (headers, params) => {\n  return axios.post(`${base}/api/automation/absetWinner`, params, { headers }).then(res => res.data)\n}\n\n// 获取建模空间地址\nexport const getJupyterURL = (headers, params) => {\n  return axios.get(`${base}/api/workspace/getjupyterurl`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 获取自动化测试结果\nexport const getTestResultList = (headers, params) => {\n  return axios.get(`${base}/api/report/auto_test_report`, { params: params, headers: headers }).then(res => res.data)\n}\n\nexport const getdrawPieChart = () => {\n  return axios.get(`${base}/getdrawPieChart`)\n}\n\nexport const getdrawLineChart = () => {\n  return axios.get(`${base}/getdrawLineChart`)\n}\n\n// 添加基础任务信息\nexport const addBaseTaskJob = (headers, params) => {\n  return axios.post(`${base}/api/tasks/add_base_task_job`, params, { headers }).then(res => res.data)\n}\n// 更新基础任务信息\nexport const updateBaseTaskJob = (headers, params) => {\n  return axios.post(`${base}/api/tasks/update_base_task_job`, params, { headers }).then(res => res.data)\n}\n\n// 获取task列表\nexport const getTasks = (headers, params) => {\n  return axios.get(`${base}/api/tasks/task_list`, { params: params, headers: headers }).then(res => res.data)\n}\n\n// 添加样本基础信息\nexport const addSampleEngine = (headers, params) => {\n  return axios.post(`${base}/api/samples/add_sample_engine`, params, { headers }).then(res => res.data)\n}\n\n// 获取样本基础信息\nexport const getSamples = (headers, params) => {\n  return axios.get(`${base}/api/samples/get_samples`, { params: params, headers: headers }).then(res => res.data)\n}\n\nexport const delSampleTable = (headers, params) => {\n  return axios.post(`${base}/api/samples/del_sample_table`, params, { headers }).then(res => res.data)\n}\n\nexport const editSampleEngine = (headers, params) => {\n  return axios.post(`${base}/api/samples/edit_sample_table`, params, { headers }).then(res => res.data)\n}\n\n// 获取接口分组列表 /api/api/group 暂时先用实验的分组信息\n// export const getApiGroupList = (headers, params) => {\n//    return axios.get(`${base}/api/automation/group`, { params: params, headers:headers}).then(res => res.data); };\n\n// export const requestLogin = params => { return axios.post(`${base}/login`, params).then(res => res.data) }\n\n/* export const getUserList = params => { return axios.get(`${base}/user/list`, { params: params }) }\n\nexport const getUserListPage = params => { return axios.get(`${base}/user/listpage`, { params: params }) }\n\nexport const removeUser = params => { return axios.get(`${base}/user/remove`, { params: params }) }\n\nexport const batchRemoveUser = params => { return axios.get(`${base}/user/batchremove`, { params: params }) }\n\nexport const editUser = params => { return axios.get(`${base}/user/edit`, { params: params }) }\n\nexport const addUser = params => { return axios.get(`${base}/user/add`, { params: params }) }\n*/\n"],"sourceRoot":""}